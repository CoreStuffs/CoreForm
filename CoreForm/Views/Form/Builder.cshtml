
@{
    ViewData["Title"] = "Form";

}

Builder <h2>@Model.Name</h2>

@section Scripts
{
    <script src="@Url.Content("~/lib/vue/vue.min.js")"></script>
    <script src="@Url.Content("~/lib/coreform-js//dist/coreform.builder.min.js")"></script>
}

@section StyleSheets{
    <link rel="stylesheet" href="@Url.Content("~/lib/coreform-js//dist/coreform.builder.min.css")" />
}



<div style="max-width: 900px;margin:auto">
    <div id="app"></div>
</div>

@section LocalScripts
{
    <script>
    $(document).ready(function () {
    var schema = {
  "schemaVersion": 1,
  "formVersion": 0,
  "name": "article",
  "title": "New article",
  "fields": [
    {
      "label": "Title",
      "variable": "title",
      "placeholder": "The article title",
      "id": "ctrl_1",
      "type": "textField"
    },
    {
      "showSeparator": true,
      "columns": [
        {
          "id": "col_ctrl_4_1",
          "width": "1-2",
          "fields": [
            {
              "label": "Publishing date",
              "variable": "publishingPeriod",
              "placeholder": "The period of appearance",
              "timePicker": false,
              "rangePicker": true,
              "id": "ctrl_2",
              "type": "datetimeField"
            }
          ]
        },
        {
          "id": "col_ctrl_4_2",
          "width": "1-2",
          "fields": [
            {
              "label": "Publishing countries",
              "variable": "countries",
              "placeholder": "",
              "minimumInputLength": 3,
              "sourceId": "countries",
              "multiple": true,
              "id": "ctrl_5",
              "type": "selectField"
            }
          ]
        }
      ],
      "id": "ctrl_4",
      "type": "grid",
      "width": 12
    },
    {
      "label": "Article",
      "variable": "article",
      "placeholder": "",
      "id": "ctrl_3",
      "type": "richtextField"
    }
  ],
  "variables": [
    {
      "name": "countries",
      "validations": [
        {
          "type": "required"
        }
      ],
      "type": "listitemarray"
    },
    {
      "name": "article",
      "validations": [
        {
          "type": "required"
        }
      ],
      "type": "richtext"
    },
    {
      "name": "title",
      "validations": [
        {
          "type": "required"
        }
      ],
      "type": "text"
    },
    {
      "name": "publishingPeriod",
      "validations": [
        {
          "type": "required"
        }
      ],
      "type": "datetimerange"
    }
  ]
}

            coreform.formBuilder("#app", {
                onSavingSchema : function(schema, callback){
                    alert(JSON.stringify(schema));
                },
                dataAdapter : customDataAdapter

            }).setSchema(schema);
        });





var dataSources = [
    {
        //common/mandatory part
       id:'countries',
       title:'Countries',
       loadMode: 'always',
       //custom part
       config:{
           type: 'rest',
           method: 'GET',
           queryableUrl:'https://restcountries.eu/rest/v2/name/{{query}}?fields=name;flag;alpha3Code',
           getAllUrl:'https://restcountries.eu/rest/v2/all?fields=name;flag;alpha3Code',
           transform:function(data){
               var results=[];
               for (var i = 0; i < data.length; i++) {
                   results.push({
                       id: data[i].alpha3Code,
                       text: data[i].name
                   });
               }
               return results;
           }
       }
   },
   {
        //common/mandatory part
       id:'currencies',
       title:'Currencies',
       loadMode: 'once',
       //custom part
       config:{
           type: 'rest',
           method: 'GET',
           getAllUrl:'https://openexchangerates.org/api/currencies.json',
           transform:function(data){
               var results=[];
               for (let [key, value] of Object.entries(data)) {
                   results.push({
                       id: key,
                       text: value
                   });
               }
               return results;
           }
       }
   }
];


var customDataAdapter = {
    getDataSources: function(callback) {
        var data = [];
        for (var i = 0; i < dataSources.length; i++) {
            data.push({
                id : dataSources[i].id,
                text : dataSources[i].title,
                loadMode : dataSources[i].loadMode
            });
        }
        callback(data);
    },
    getData: function (sourceId, onSuccess, query) {
        var dataSource;
        for (var i = 0; i < dataSources.length; i++) {
            if(dataSources[i].id===sourceId) {dataSource=dataSources[i];break;}
        }
        if(dataSource){
            var url = null;
            if(dataSource.config.getAllUrl) url = dataSource.config.getAllUrl;
            if (dataSource.config.queryableUrl && query) url = dataSource.config.queryableUrl.replace(/{{query}}/gi, query);
            $.ajax({
                url: url,
                crossDomain:true,
                type: dataSource.config.method,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if(dataSource.config.transform)data = dataSource.config.transform(data);
                    onSuccess(data);
                }
            });
        }
    },
    getDataItem:function(sourceId, itemId, onSuccess){

    }

}

var dataSources = [
    {
        //common/mandatory part
       id:'countries',
       title:'Countries',
       loadMode: 'always',
       //custom part
       config:{
           type: 'rest',
           method: 'GET',
           queryableUrl:'https://restcountries.eu/rest/v2/name/{{query}}?fields=name;flag;alpha3Code',
           getAllUrl:'https://restcountries.eu/rest/v2/all?fields=name;flag;alpha3Code',
           transform:function(data){
               var results=[];
               for (var i = 0; i < data.length; i++) {
                   results.push({
                       id: data[i].alpha3Code,
                       text: data[i].name
                   });
               }
               return results;
           }
       }
   },
   {
        //common/mandatory part
       id:'currencies',
       title:'Currencies',
       loadMode: 'once',
       //custom part
       config:{
           type: 'rest',
           method: 'GET',
           getAllUrl:'https://openexchangerates.org/api/currencies.json',
           transform:function(data){
               var results=[];
               for (let [key, value] of Object.entries(data)) {
                   results.push({
                       id: key,
                       text: value
                   });
               }
               return results;
           }
       }
   }
];



    </script>
}
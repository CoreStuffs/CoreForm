<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="DotNetify.Core" Version="5.3.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.12" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
		  <PackageReference Include="LiteDB" Version="5.0.11" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.15.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Compile Remove="ClientApp\dist\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="ClientApp\dist\**" />
		<EmbeddedResource Remove="ClientApp\dist\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="ClientApp\dist\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<ItemGroup>
	  <None Remove="ClientApp\devcert.pfx" />
	  <None Remove="ClientApp\dist\css\app.fb0d3e16.css" />
	  <None Remove="ClientApp\dist\css\chunk-vendors.07570721.css" />
	  <None Remove="ClientApp\dist\favicon.ico" />
	  <None Remove="ClientApp\dist\img\logo.82b9c7a5.png" />
	  <None Remove="ClientApp\dist\index.html" />
	  <None Remove="ClientApp\dist\js\app.cc14bb27.js" />
	  <None Remove="ClientApp\dist\js\app.cc14bb27.js.map" />
	  <None Remove="ClientApp\dist\js\chunk-vendors.9c8a4d41.js" />
	  <None Remove="ClientApp\dist\js\chunk-vendors.9c8a4d41.js.map" />
	</ItemGroup>
	
	
  <ItemGroup>
    <ProjectReference Include="..\CoreForm.Data.LiteDB\CoreForm.Data.LiteDB.csproj" />
    <ProjectReference Include="..\CoreForm.Data\CoreForm.DataInterfaces.csproj" />
  </ItemGroup>


	<Target Name="BuildVue" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Release'">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
	</Target>

	<Target Name="PublishRunVite" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --ssr" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
